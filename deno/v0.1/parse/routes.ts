import type { Routes } from "../type_flyweight/parse.ts";

import {
  ATTRIBUTE,
  ATTRIBUTE_DECLARATION,
  ATTRIBUTE_DECLARATION_CLOSE,
  ATTRIBUTE_SETTER,
  ATTRIBUTE_VALUE,
  CLOSE_NODE_CLOSED,
  CLOSE_NODE_SLASH,
  CLOSE_NODE_SPACE,
  CLOSE_TAGNAME,
  DEFAULT,
  ERROR,
  INDEPENDENT_NODE,
  INDEPENDENT_NODE_CLOSED,
  INITIAL,
  NODE,
  NODE_CLOSED,
  NODE_SPACE,
  TAGNAME,
  TEXT,
} from "../type_flyweight/constants.ts";

const LB = "<";
const RB = ">";
const SP = " ";
const NL = "\n";
const TB = "\t";
const FS = "/";
const QT = "\"";
const EQ = "=";

const INIITAL_MAP = new Map<string, string>([
  [LB, NODE],
  [DEFAULT, TEXT],
]);

const NODE_MAP = new Map<string, string>([
  [SP, ERROR],
  [NL, ERROR],
  [TB, ERROR],
  [FS, CLOSE_NODE_SLASH],
  [RB, ERROR],
  [DEFAULT, TAGNAME],
]);

const CLOSE_NODE_SLASH_MAP = new Map<string, string>([
  [SP, ERROR],
  [NL, ERROR],
  [TB, ERROR],
  [DEFAULT, CLOSE_TAGNAME],
]);

const TAGNAME_MAP = new Map<string, string>([
  [RB, NODE_CLOSED],
  [SP, NODE_SPACE],
  [NL, NODE_SPACE],
  [TB, NODE_SPACE],
  [FS, INDEPENDENT_NODE],
  [DEFAULT, TAGNAME],
]);

const CLOSE_TAGNAME_MAP = new Map<string, string>([
  [RB, CLOSE_NODE_CLOSED],
  [SP, CLOSE_NODE_SPACE],
  [NL, CLOSE_NODE_SPACE],
  [TB, CLOSE_NODE_SPACE],
  [DEFAULT, CLOSE_TAGNAME],
]);

const CLOSE_NODE_SPACE_MAP = new Map<string, string>([
  [RB, CLOSE_NODE_CLOSED],
  [DEFAULT, CLOSE_NODE_SPACE],
]);

const INDEPENDENT_NODE_MAP = new Map<string, string>([
  [RB, INDEPENDENT_NODE_CLOSED],
  [DEFAULT, INDEPENDENT_NODE],
]);

const NODE_SPACE_MAP = new Map<string, string>([
  [RB, NODE_CLOSED],
  [SP, NODE_SPACE],
  [NL, NODE_SPACE],
  [TB, NODE_SPACE],
  [FS, INDEPENDENT_NODE],
  [DEFAULT, ATTRIBUTE],
]);

const ATTRIBUTE_MAP = new Map<string, string>([
  [SP, NODE_SPACE],
  [NL, NODE_SPACE],
  [TB, NODE_SPACE],
  [EQ, ATTRIBUTE_SETTER],
  [RB, NODE_CLOSED],
  [FS, INDEPENDENT_NODE],
  [DEFAULT, ATTRIBUTE],
]);

const ATTRIBUTE_SETTER_MAP = new Map<string, string>([
  [QT, ATTRIBUTE_DECLARATION],
  [NL, NODE_SPACE],
  [DEFAULT, NODE_SPACE],
]);

const ATTRIBUTE_DECLARATION_MAP = new Map<string, string>([
  [QT, ATTRIBUTE_DECLARATION_CLOSE],
  [DEFAULT, ATTRIBUTE_VALUE],
]);

const ATTRIBUTE_VALUE_MAP = new Map<string, string>([
  [QT, ATTRIBUTE_DECLARATION_CLOSE],
  [DEFAULT, ATTRIBUTE_VALUE],
]);

const ATTRIBUTE_DECLARATION_CLOSE_MAP = new Map<string, string>([
  [RB, NODE_CLOSED],
  [FS, INDEPENDENT_NODE],
  [DEFAULT, NODE_SPACE],
]);

const routes = new Map<string, Map<string, string>>([
  [INITIAL, INIITAL_MAP],
  [TEXT, INIITAL_MAP],
  [NODE, NODE_MAP],
  [CLOSE_NODE_SLASH, CLOSE_NODE_SLASH_MAP],
  [TAGNAME, TAGNAME_MAP],
  [CLOSE_TAGNAME, CLOSE_TAGNAME_MAP],
  [CLOSE_NODE_SPACE, CLOSE_NODE_SPACE_MAP],
  [INDEPENDENT_NODE, INDEPENDENT_NODE_MAP],
  [NODE_CLOSED, INIITAL_MAP],
  [CLOSE_NODE_CLOSED, INIITAL_MAP],
  [INDEPENDENT_NODE_CLOSED, INIITAL_MAP],
  [NODE_SPACE, NODE_SPACE_MAP],
  [ATTRIBUTE, ATTRIBUTE_MAP],
  [ATTRIBUTE_SETTER, ATTRIBUTE_SETTER_MAP],
  [ATTRIBUTE_DECLARATION, ATTRIBUTE_DECLARATION_MAP],
  [ATTRIBUTE_VALUE, ATTRIBUTE_VALUE_MAP],
  [ATTRIBUTE_DECLARATION_CLOSE, ATTRIBUTE_DECLARATION_CLOSE_MAP],
]);

export { routes };
